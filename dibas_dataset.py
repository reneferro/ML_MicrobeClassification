# -*- coding: utf-8 -*-
"""DIBaS_dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eFhMkaVOL0VfZiFnIDP5xb0fviZuh-oq

# Imports
"""

import os                       #interacting with the operating system library
from PIL import Image           #Python Imaging Library
from itertools import product   #Mathematics Cartesian Product
import shutil                   #high-level operation on a file

from google.colab import drive
drive.mount('/content/drive')

"""# data preparation functions

file_inf(folder) is a function that returns the name of the files in the given folder
"""

#input: folder (path - str) ; output: filename - images' names (list)
def file_inf(folder):
  filename = []
  for dir in os.listdir(folder):
    filename.append(dir)
  return filename

#input: filename - file name (str), dir_in - image path (str), dir_out - tiles saving dir (str), d - size of tile (int)
def tile(filename, dir_in, dir_out, d):
    name, ext = os.path.splitext(filename)
    img = Image.open(os.path.join(dir_in, filename))
    w, h = img.size
    
    grid = product(range(0, h-h%d, d), range(0, w-w%d, d))
    for i, j in grid:
        box = (j, i, j+d, i+d)
        out = os.path.join(dir_out, f'{name}_{i}_{j}{ext}')
        img.crop(box).save(out)

# Commented out IPython magic to ensure Python compatibility.
# %cd "/content/drive/MyDrive/ML_project/DIBaSdataset"

"""# DIBaS dataset slicing"""

#slicing images and saving as a new file using tile and file_inf functions
classes = ['Acinetobacter.baumanii','Actinomyces','Bacteroides','Candida','Clostridium','Enterococcus','Escherichia','Listeria','Neisseria','Proteus','Pseudomonas','Staphylococcus']
folder = "/content/drive/MyDrive/ML_project/DIBaSdataset"
folder_out = "/content/drive/MyDrive/ML_project/DIBaS_sliced"
for c in classes:
  path = os.path.join(folder,c)
  filename = file_inf(path)
  for f in filename:
    tile(f, path,os.path.join(folder_out,c),224)

#check images countaty
images = []
folder = "/content/drive/MyDrive/ML_project/DIBaS_sliced"
for c in classes:
  path = os.path.join(folder,c)
  print(len(os.listdir(path)))

"""# DIBaS sliced dataset empty images"""

def avg_rgb(filename):
  P = 50176 #num of pixels
  rgb = [0,0,0]
  img = Image.open(filename)
  for i in range(224):
    for j in range(224):
      r,g,b = img.getpixel((i,j))
      rgb[0]+=r
      rgb[1]+=g
      rgb[2]+=b
  rgb[0]=int(rgb[0]/P)
  rgb[1]=int(rgb[1]/P)
  rgb[2]=int(rgb[2]/P)
  
  return tuple(rgb)

print(avg_rgb('/content/drive/MyDrive/ML_project/DIBaS_sliced/Staphylococcus/Staphylococcus.aureus_0005_0_1120.tif'))
print(avg_rgb('/content/drive/MyDrive/ML_project/DIBaS_sliced/Staphylococcus/Staphylococcus.aureus_0005_672_896.tif'))

def blank(folder):
  blank_files = []
  filename = file_inf(folder)
  for f in filename:
    r,g,b = avg_rgb(os.path.join(folder,f))
    if(r>210 and g>212 and b>188):
      blank_files.append(f)
  return blank_files

def convert(path,classes):
  for c in classes:
    folder = os.path.join(path,c)
    filename = file_inf(folder)
    for f in filename:
      file = os.path.join(folder,f)
      filename=file.split(".")
      img = Image.open(file)
      target_name = filename[0] + ".jpg"
      rgb_image = img.convert('RGB')
      rgb_image.save(target_name)

convert('/content/drive/MyDrive/ML_project/DIBaS_sliced',classes)

def countPix(filename):
  blank_files = []
  count = 0
  img = Image.open(filename)
  for i in range(224):
    for j in range(224):
      r,g,b = img.getpixel((i,j))

folder = "/content/drive/MyDrive/ML_project/DIBaS_sliced/Staphylococcus"
blank_folder = '/content/drive/MyDrive/ML_project/empty'
files = blank(folder)
for f in files:
  shutil.move(os.path.join(folder,f),blank_folder)

"""**rgb condition by class:**
Acinetobacter.baumanii:r>215 and g>213 and b>185
Actinomyces:r>208 and g>210 and b>185
Bacteroides:r>220 and g>219 and b>187
Candida:r>205 and g>206 and b>177
Clostridium:r>203 and g>203 and b>180
Enterococcus:r>209 and g>210 and b>183
Escherichia:r>217 and g>219 and b>187
Listeria:r>217 and g>219 and b>187
Neisseria:r>213 and g>215 and b>180
Proteus:r>200 and g>200 and b>178
Pseudomonas:r>212 and g>215 and b>185
Staphylococcus:r>210 and g>212 and b>188
"""





